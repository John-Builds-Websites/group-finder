/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    'attendee-categories': AttendeeCategory;
    groups: Group;
    locations: Location;
    users: User;
    schedule: Schedule;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "attendee-categories".
 */
export interface AttendeeCategory {
  id: string;
  name: string;
  description?: string | null;
  color:
    | 'red'
    | 'orange'
    | 'yellow'
    | 'lime'
    | 'green'
    | 'emerald'
    | 'teal'
    | 'cyan'
    | 'sky'
    | 'blue'
    | 'purple'
    | 'indigo'
    | 'violet'
    | 'fuchsia'
    | 'pink'
    | 'rose';
  shade: '50' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | '950';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "groups".
 */
export interface Group {
  id: string;
  name: string;
  description?: string | null;
  slug: string;
  attendeeCategories?: (string | AttendeeCategory)[] | null;
  location?: (string | null) | Location;
  weeklySchedule?:
    | {
        schedule?: (string | null) | Schedule;
        id?: string | null;
      }[]
    | null;
  bookingRequired?: boolean | null;
  contactDetails?:
    | {
        type: 'url' | 'email' | 'phone';
        value: string;
        customLabel?: string | null;
        id?: string | null;
      }[]
    | null;
  moderators?: (string | User)[] | null;
  status: 'pending' | 'active' | 'inactive' | 'archived';
  price?:
    | {
        priceLabel: string;
        amount: number;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations".
 */
export interface Location {
  id: string;
  name: string;
  address: string;
  postcode: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "schedule".
 */
export interface Schedule {
  id: string;
  weekdays?: ('mon' | 'tue' | 'wed' | 'thu' | 'fri' | 'sat' | 'sun')[] | null;
  startTime: string;
  endTime: string;
  additionalInfo?: string | null;
  location?: (string | null) | Location;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  firstName: string;
  lastName: string;
  role: 'user' | 'moderator' | 'admin';
  groupsFollowed?: (string | Group)[] | null;
  groupsManaged?: (string | Group)[] | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}